name: Weekly Staging to Main Merge

on:
  schedule:
    # Runs every Tuesday at 1:00 PM Dallas time (Central Time)
    # During CDT (March-November): 18:00 UTC
    # During CST (November-March): 19:00 UTC
    # Using CDT time (18:00 UTC) as primary
    - cron: '0 18 * * 2'
  
  # Allow manual triggering for testing
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  merge-staging-to-main:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for commit analysis
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Check for recent commits in staging
      id: check_commits
      run: |
        # Get commits from staging branch in the last 7 days
        SEVEN_DAYS_AGO=$(date -d '7 days ago' --iso-8601)
        echo "Checking for commits since: $SEVEN_DAYS_AGO"
        
        # Switch to staging branch
        git checkout staging
        
        # Count commits in the last 7 days
        RECENT_COMMITS=$(git log --since="$SEVEN_DAYS_AGO" --oneline | wc -l)
        echo "Found $RECENT_COMMITS commits in staging from the last 7 days"
        
        # Get the commit details for logging
        if [ $RECENT_COMMITS -gt 0 ]; then
          echo "Recent commits:"
          git log --since="$SEVEN_DAYS_AGO" --oneline --no-merges
          echo "has_recent_commits=true" >> $GITHUB_OUTPUT
        else
          echo "No recent commits found in staging branch"
          echo "has_recent_commits=false" >> $GITHUB_OUTPUT
        fi
        
        echo "recent_commit_count=$RECENT_COMMITS" >> $GITHUB_OUTPUT

    - name: Merge staging to main
      if: steps.check_commits.outputs.has_recent_commits == 'true'
      run: |
        echo "Proceeding with merge - found ${{ steps.check_commits.outputs.recent_commit_count }} recent commits"
        
        # Switch to main branch
        git checkout main
        git pull origin main
        
        # Merge staging into main
        if git merge staging --no-ff -m "Weekly merge: staging to main ($(date '+%Y-%m-%d'))"; then
          echo "Merge successful"
          
          # Push the changes
          git push origin main
          echo "Changes pushed to main branch"
        else
          echo "Merge failed - there may be conflicts"
          git merge --abort
          exit 1
        fi

    - name: Create merge summary
      if: steps.check_commits.outputs.has_recent_commits == 'true'
      run: |
        echo "## Weekly Merge Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Date**: $(date '+%Y-%m-%d %H:%M:%S') Dallas Time" >> $GITHUB_STEP_SUMMARY
        echo "- **Commits merged**: ${{ steps.check_commits.outputs.recent_commit_count }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Source branch**: staging" >> $GITHUB_STEP_SUMMARY
        echo "- **Target branch**: main" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Recent commits included:" >> $GITHUB_STEP_SUMMARY
        git log --since="7 days ago" staging --oneline --no-merges | head -20 >> $GITHUB_STEP_SUMMARY

    - name: Skip merge notification
      if: steps.check_commits.outputs.has_recent_commits == 'false'
      run: |
        echo "## Weekly Merge Skipped" >> $GITHUB_STEP_SUMMARY
        echo "No commits found in staging branch from the last 7 days." >> $GITHUB_STEP_SUMMARY
        echo "Merge operation was skipped." >> $GITHUB_STEP_SUMMARY
        echo "- **Date**: $(date '+%Y-%m-%d %H:%M:%S') Dallas Time" >> $GITHUB_STEP_SUMMARY

    - name: Notify on failure
      if: failure()
      run: |
        echo "## Merge Failed" >> $GITHUB_STEP_SUMMARY
        echo "The weekly merge from staging to main failed." >> $GITHUB_STEP_SUMMARY
        echo "Please check the logs and resolve any conflicts manually." >> $GITHUB_STEP_SUMMARY
        echo "- **Date**: $(date '+%Y-%m-%d %H:%M:%S') Dallas Time" >> $GITHUB_STEP_SUMMARY
